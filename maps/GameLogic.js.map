{"version":3,"sources":["GameLogic.coffee"],"names":[],"mappings":"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","file":"GameLogic.js","sourceRoot":"/source/","sourcesContent":["define ['AI', 'GameState', 'GameStates'], (AI, GameState, GameStates) ->\n  TOTAL_CELLS = 4**3\n  moves = []\n\n  isValidMove = (move) ->\n    move? and move not in moves\n\n  getLastComputerMove = ->\n    if moves.length > 1 then moves[moves.length - 1] else null\n\n  makeMove = (move) ->\n    if move not in moves\n      GameState.set GameStates.THINKING\n      processPlayerMove move\n\n  processPlayerMove = (move) ->\n    [moves, playerLine, playerMove] = AI.userTurn moves, move\n    playerLine\n\n  makeComputerMove = ->\n    GameState.unset GameStates.THINKING\n    processComputerMove()\n\n  processComputerMove = ->\n    [moves, computerLine, computerMove] = AI.computerTurn moves\n    [computerMove, computerLine]\n\n  processState = (playerLine, computerLine) ->\n    playerWins = playerLine?\n    computerWins = computerLine? and not playerLine?\n\n    if playerLine? or computerLine?\n      endGame playerWins\n    else if moves.length is TOTAL_CELLS\n      endGame()\n\n    if playerWins\n      playerLine\n    else if computerWins\n      computerLine\n\n  endGame = (playerWins) ->\n    GameState.unset state for state in [GameStates.DRAW, GameStates.PLAYER_WIN, GameStates.COMPUTER_WIN]\n    endState = null\n    if playerWins?\n      endState = if playerWins then GameStates.PLAYER_WIN else GameStates.COMPUTER_WIN\n    else\n      endState = GameStates.DRAW\n    GameState.set endState\n    GameState.set GameStates.END_GAME\n\n  gameReset = ->\n    moves = []\n    GameState.reset()\n\n  { isValidMove, getLastComputerMove, makeMove, makeComputerMove, processState, gameReset }\n"]}